/*
 * DefaultInstantMarkInfoPanel.java
 *
 * Created on 6 de julio de 2007, 10:36
 */

package net.javahispano.jsignalwb.plugins.defaults;

import java.awt.*;
import java.beans.*;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.filechooser.FileFilter;

import net.javahispano.jsignalwb.JSWBManager;
import net.javahispano.jsignalwb.Signal;
import net.javahispano.jsignalwb.jsignalmonitor.TimeRepresentation;
import net.javahispano.jsignalwb.ui.JTextFieldDate;

import com.michaelbaranov.microba.calendar.DatePicker;

/**
 *
 * @author  Compaq_Propietario
 */
public class DefaultInstantMarkInfoPanel extends DefaultMarkInfoPanel<DefaultInstantMark> {

    private static final Logger LOGGER = Logger.getLogger(DefaultInstantMarkInfoPanel.class.getName());
    /**
     *
     */
    private static final long serialVersionUID = -6038183406671451579L;

    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private JTextField colorTextField;
//    private JTextArea commentaryTextArea;
//    private DatePicker datePicker1;
    private JLabel iconLabel;
//    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton4;
    private JRadioButton jRadioButton2;
//    private JTextFieldDate jTextFieldDate1;
//    private JLabel kindLabel;
//    private JTextField markTitleTextField;
//    private JLabel signalNameLabel;
    // End of variables declaration//GEN-END:variables
//    private JWindow jw;

//    protected transient DefaultInstantMark dim;
//    protected Signal signal;
    protected JFileChooser jfc;

    /** Creates new form DefaultInstantMarkInfoPanel */
    public DefaultInstantMarkInfoPanel(Signal signal, DefaultInstantMark dim) {
        super(signal, dim);
        if (dim.isImage()) {
            jRadioButton2.setSelected(true);
            jButton4.setEnabled(true);
            jButton3.setEnabled(false);
        } else {
            jRadioButton2.setSelected(false);
            jButton4.setEnabled(false);
            jButton3.setEnabled(true);
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("date".equals(evt.getPropertyName())) {
            Date date = datePicker1.getDate();
            if (date != null) {
                jTextFieldDate1.setText(TimeRepresentation.timeToString(
                        swapDateNoChangeTime(
                                dim.getMarkTime(), date.getTime())));
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    @Override
    protected void initComponents() {
        ButtonGroup buttonGroup = new ButtonGroup();
        signalNameLabel = new JLabel();
        JPanel jPanel1 = new JPanel();
        JLabel jLabel2 = new JLabel();
        JLabel jLabel3 = new JLabel();
        markTitleTextField = new JTextField();
        jTextFieldDate1 = new JTextFieldDate();
        datePicker1 = new DatePicker();
        JPanel jPanel2 = new JPanel();
        JLabel jLabel4 = new JLabel();
        JScrollPane jScrollPane1 = new JScrollPane();
        commentaryTextArea = new JTextArea();
        JButton jButton1 = new JButton();
        kindLabel = new JLabel();
        jButton2 = new JButton();
        JPanel jPanel3 = new JPanel();
        jRadioButton2 = new JRadioButton();
        iconLabel = new JLabel();
        jButton4 = new JButton();
        JRadioButton jRadioButton1 = new JRadioButton();
        colorTextField = new JTextField();
        jButton3 = new JButton();

        setBorder(new LineBorder(new java.awt.Color(255, 153, 0), 5, true));
        signalNameLabel.setForeground(java.awt.Color.blue);
        signalNameLabel.setHorizontalAlignment(SwingConstants.CENTER);
        signalNameLabel.setText("Signal:");
        signalNameLabel.setBorder(BorderFactory.createEtchedBorder());

        jPanel1.setBorder(BorderFactory.createEtchedBorder());
        jLabel2.setForeground(java.awt.Color.blue);
        jLabel2.setText("Instant time:");

        jLabel3.setForeground(java.awt.Color.blue);
        jLabel3.setText("Mark Title:");

        markTitleTextField.setForeground(java.awt.Color.blue);
        markTitleTextField.setHorizontalAlignment(JTextField.CENTER);
        markTitleTextField.setText("jTextField1");

        jTextFieldDate1.setForeground(java.awt.Color.blue);
        jTextFieldDate1.setHorizontalAlignment(JTextField.CENTER);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                          .addContainerGap()
                          .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                          .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(markTitleTextField, GroupLayout.DEFAULT_SIZE, 221,
                                                  Short.MAX_VALUE)
                                    .addGroup(GroupLayout.Alignment.TRAILING,
                                              jPanel1Layout.createSequentialGroup()
                                              .addComponent(jTextFieldDate1, GroupLayout.DEFAULT_SIZE, 192,
                Short.MAX_VALUE)
                                              .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                              .addComponent(datePicker1, GroupLayout.PREFERRED_SIZE, 23,
                GroupLayout.PREFERRED_SIZE)))
                          .addContainerGap())
                );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                          .addContainerGap()
                          .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(markTitleTextField, GroupLayout.PREFERRED_SIZE,
                                                  GroupLayout.DEFAULT_SIZE,
                                                  GroupLayout.PREFERRED_SIZE))
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,
                                           GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                          .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.
                BASELINE)
                                              .addComponent(jLabel2)
                                              .addComponent(jTextFieldDate1, GroupLayout.PREFERRED_SIZE,
                GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                    .addComponent(datePicker1, GroupLayout.PREFERRED_SIZE,
                                                  GroupLayout.DEFAULT_SIZE,
                                                  GroupLayout.PREFERRED_SIZE))
                          .addContainerGap())
                );

        jPanel2.setBorder(BorderFactory.createEtchedBorder());
        jLabel4.setForeground(java.awt.Color.blue);
        jLabel4.setText("Comment");

        commentaryTextArea.setColumns(20);
        commentaryTextArea.setRows(5);
        jScrollPane1.setViewportView(commentaryTextArea);

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                          .addContainerGap()
                          .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 287,
                                                  Short.MAX_VALUE)
                                    .addComponent(jLabel4))
                          .addContainerGap())
                );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                          .addContainerGap()
                          .addComponent(jLabel4)
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                          .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                          .addContainerGap())
                );

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideJWindowActionPerformed();
            }
        });

        kindLabel.setForeground(java.awt.Color.blue);
        kindLabel.setHorizontalAlignment(SwingConstants.CENTER);
        kindLabel.setText("Kind of Mark:");
        kindLabel.setBorder(BorderFactory.createEtchedBorder());

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed();
            }
        });

        jPanel3.setBorder(BorderFactory.createEtchedBorder());
        buttonGroup.add(jRadioButton2);
        jRadioButton2.setText("Icon");
        jRadioButton2.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtons(evt);
            }
        });

        iconLabel.setHorizontalAlignment(SwingConstants.CENTER);
        iconLabel.setIcon(new ImageIcon(dim.getImageToShow().getScaledInstance(15, 15, Image.SCALE_SMOOTH)));

        jButton4.setText("Choose Icon");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed();
            }
        });

        buttonGroup.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Color");
        jRadioButton1.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtons(evt);
            }
        });

        colorTextField.setBackground(dim.getColor());
        colorTextField.setEditable(false);
        colorTextField.setHorizontalAlignment(JTextField.CENTER);
        colorTextField.setText("Mark Color");

        jButton3.setText("Choose color");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed();
            }
        });

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                          .addContainerGap()
                          .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                              .addComponent(jRadioButton1)
                                              .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                              .addComponent(colorTextField, GroupLayout.DEFAULT_SIZE, 137,
                Short.MAX_VALUE)
                                              .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                              .addComponent(jRadioButton2, GroupLayout.DEFAULT_SIZE,
                GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                              .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                              .addComponent(iconLabel, GroupLayout.DEFAULT_SIZE, 140,
                Short.MAX_VALUE)
                                              .addGap(9, 9, 9)))
                          .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, GroupLayout.Alignment.TRAILING,
                                                  GroupLayout.DEFAULT_SIZE,
                                                  GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, GroupLayout.Alignment.TRAILING,
                                                  GroupLayout.DEFAULT_SIZE,
                                                  GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                          .addContainerGap())
                );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                          .addContainerGap()
                          .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.
                BASELINE)
                                              .addComponent(jRadioButton2)
                                              .addComponent(iconLabel, GroupLayout.PREFERRED_SIZE, 23,
                GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton4))
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,
                                           GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                          .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, GroupLayout.Alignment.TRAILING)
                                    .addGroup(GroupLayout.Alignment.TRAILING,
                                              jPanel3Layout.
                                              createParallelGroup(GroupLayout.Alignment.BASELINE)
                                              .addComponent(jRadioButton1, GroupLayout.PREFERRED_SIZE, 23,
                GroupLayout.PREFERRED_SIZE)
                                              .addComponent(colorTextField, GroupLayout.PREFERRED_SIZE,
                GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                          .addContainerGap())
                );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                          .addContainerGap()
                          .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel3, GroupLayout.Alignment.LEADING,
                                                  GroupLayout.DEFAULT_SIZE,
                                                  GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel2, GroupLayout.Alignment.LEADING,
                                                  GroupLayout.DEFAULT_SIZE,
                                                  GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel1, GroupLayout.Alignment.LEADING,
                                                  GroupLayout.DEFAULT_SIZE,
                                                  GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(signalNameLabel, GroupLayout.Alignment.LEADING,
                                                  GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                              .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 227,
                GroupLayout.PREFERRED_SIZE)
                                              .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                              .addComponent(jButton2, GroupLayout.DEFAULT_SIZE, 78,
                Short.MAX_VALUE))
                                    .addComponent(kindLabel, GroupLayout.Alignment.LEADING,
                                                  GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                          .addContainerGap())
                );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                          .addContainerGap()
                          .addComponent(signalNameLabel, GroupLayout.PREFERRED_SIZE, 36,
                                        GroupLayout.PREFERRED_SIZE)
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                          .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE,
                                        GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                          .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE,
                                        GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                          .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE,
                                        GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                          .addComponent(kindLabel)
                          .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,
                                           GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                          .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))
                          .addContainerGap())
                );
    } // </editor-fold>//GEN-END:initComponents

    private void radioButtons(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_radioButtons
        if ("Color".equals(evt.getActionCommand())) {
            //dim.setIsImage(false);
            jButton4.setEnabled(false);
            jButton3.setEnabled(true);
        }
        if ("Icon".equals(evt.getActionCommand())) {
            //dim.setIsImage(true);
            jButton4.setEnabled(true);
            jButton3.setEnabled(false);
        }
    } //GEN-LAST:event_radioButtons

    private void jButton4ActionPerformed() { //GEN-FIRST:event_jButton4ActionPerformed
        if (jfc == null) {
            jfc = new JFileChooser();

            FileFilter ff = new FileFilter() {
                @Override
                public boolean accept(File f) {
                    if (f.isDirectory()) {
                        return true;
                    }
                    String path = f.getPath().toLowerCase();
                    return path.endsWith(".gif") || path.endsWith(".jpg") || path.endsWith(".jpeg")
                            || path.endsWith(".bmp") || path.endsWith(".png");
                }

                // return a description of files
                @Override
                public String getDescription() {
                    return "Image file (*.gif,*.jpg,*.jpeg,*.bmp,*.png)";
                }
            };
            jfc.setFileFilter(ff);
        }
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                dim.setImageToShow(new ImageIcon(jfc.getSelectedFile().getCanonicalPath()).getImage());
                dim.setImagePath(jfc.getSelectedFile().getAbsolutePath());
            } catch (IOException ex) {
                LOGGER.log(Level.WARNING, ex.getMessage(), ex);
            }
            iconLabel.setIcon(new ImageIcon(dim.getImageToShow().getScaledInstance(15, 15, Image.SCALE_SMOOTH)));
        }
    } //GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed() { //GEN-FIRST:event_jButton3ActionPerformed
        Color c = JColorChooser.showDialog(this, "SelectColor", dim.getColor());
        if (c != null) {
            colorTextField.setBackground(c);
        }
    } //GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed() { //GEN-FIRST:event_jButton2ActionPerformed
        if (signal != null && JOptionPane.showConfirmDialog(jw.getParent(), "Are you sure?", "Delete mark", JOptionPane.YES_NO_OPTION,
                                              JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
             signal.removeMark(dim);
             hideJWindow();
        }
    } //GEN-LAST:event_jButton2ActionPerformed

    private void hideJWindowActionPerformed() { //GEN-FIRST:event_hideJWindow
        dim.setTitle(markTitleTextField.getText());
        dim.setCommentary(commentaryTextArea.getText());
        dim.setColor(colorTextField.getBackground());
        dim.setMarkTime(TimeRepresentation.stringToMillis(jTextFieldDate1.getText()));
        dim.setIsImage(jRadioButton2.isSelected());
        hideJWindow();
    } //GEN-LAST:event_hideJWindow

//    public void showJWindow(Window owner) {
//        jw = new JWindow(owner);
//        jw.add(this);
//        jw.setSize(this.getPreferredSize());
//        jw.setLocationRelativeTo(owner);
//        jw.setVisible(true);
//    }

    private void hideJWindow() {
        JSWBManager.getJSWBManagerInstance().refreshJSM(true);
        jw.dispose();
    }


}
